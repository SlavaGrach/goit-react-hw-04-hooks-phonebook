{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","helpers/filterContacts.js","App.jsx","index.js","components/ContactForm/contactForm.module.css"],"names":["ContactForm","name","number","onAddContact","onSetUserInfo","onSubmit","action","className","style","input","htmlFor","onInput","type","value","pattern","title","required","submitBtn","ContactFilter","onSetFilter","filretValue","ContactListItem","onDeleteContact","id","onClick","ContactList","contacts","map","filterContacts","filter","obj","toLowerCase","includes","trim","App","state","handleSetUserInfo","evt","setState","target","handleAddContact","preventDefault","some","el","alert","prev","contact","uuidv4","handleDeleteContacts","handleChangeFilter","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.571939c0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './contactForm.module.css';\n\nfunction ContactForm({ name, number, onAddContact, onSetUserInfo }) {\n  return (\n    <form onSubmit={onAddContact} action=\"\" className={style.input}>\n      <label htmlFor=\"\">\n        <p>Name</p>\n        <input\n          onInput={onSetUserInfo}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label htmlFor=\"\">\n        <p>Number</p>\n        <input\n          onInput={onSetUserInfo}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={style.submitBtn}>Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  onSetUserContact: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nfunction ContactFilter({ onSetFilter, filretValue }) {\n  return (\n    <>\n      <label>\n        <p>Filter</p>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onInput={onSetFilter}\n          value={filretValue}\n        />\n      </label>\n    </>\n  );\n}\n\n// ContactFilter.propTypes = {};\n\nexport default ContactFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ContactListItem({ onDeleteContact, id, name, number }) {\n  return (\n    <li>\n      <p>\n        {name}: {number}\n      </p>\n      <button onClick={onDeleteContact} id={id}>\n        delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ContactListItem from './ContactListItem';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ContactListItem\n            onDeleteContact={onDeleteContact}\n            id={id}\n            name={name}\n            number={number}\n            key={id}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","function filterContacts(contacts, filter) {\n  return contacts.filter(obj => {\n    return obj.name.toLowerCase().includes(filter.toLowerCase().trim());\n  });\n}\nexport default filterContacts;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactFilter from './components/ContactFilter/ContactFilter';\nimport ContactList from './components/ContactList/ContactList';\nimport filterContacts from './helpers/filterContacts';\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  handleSetUserInfo = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  handleAddContact = evt => {\n    evt.preventDefault();\n    if (this.state.contacts.some(el => el.name === this.state.name)) {\n      alert(`${this.state.name} is already in contacts`);\n      this.setState(prev => ({\n        name: '',\n        number: '',\n      }));\n      return;\n    }\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.setState(prev => ({\n      contacts: [...prev.contacts, contact],\n      name: '',\n      number: '',\n    }));\n  };\n\n  handleDeleteContacts = evt => {\n    this.setState({\n      contacts: this.state.contacts.filter(el => el.id !== evt.target.id),\n    });\n  };\n\n  handleChangeFilter = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  render() {\n    // console.log(this.state.filter);\n    const contacts = filterContacts(this.state.contacts, this.state.filter);\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          name={this.state.name}\n          number={this.state.number}\n          onAddContact={this.handleAddContact}\n          onSetUserInfo={this.handleSetUserInfo}\n        ></ContactForm>\n        <h2>Contacts</h2>\n        <ContactFilter\n          filretValue={this.state.filter}\n          onSetFilter={this.handleChangeFilter}\n        ></ContactFilter>\n        <ContactList\n          onDeleteContact={this.handleDeleteContacts}\n          contacts={contacts}\n        ></ContactList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"contactForm_input__1n0gV\",\"submitBtn\":\"contactForm_submitBtn__1g94h\"};"],"sourceRoot":""}